<!--要阅读此帮助文件，请在解决方案资源管理器窗格中右击文件名，
    然后选择"在浏览器中查看"。-->

<html><head><title>ATLFire 示例：演示如何生成有窗口的控件</title></head><body><h1>ATLFire 示例：演示如何生成有窗口的控件</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>ATLFire 示例是一个从 MFC <MSHelp:link keywords="BA2ED537-B55B-4A3C-AF20-C5670B092BD7" tabindex="0" >Fire</MSHelp:link> 示例修改得到的 ActiveX 控件。 该示例演示如何使用 ATL 通过将 <b>m_bWindowedOnly</b> 标志设置为 <b>TRUE</b> 来生成有窗口控件。 它也显示了对 MFC 绘制代码需要如何处理以将其转换为直接的 Win32 代码。 该示例使用对 Win32 对话框和属性表的 ATL 支持，并且还说明如何在 ActiveX 控件中使用 Win32 选项卡 (TabControl) 控件。 该示例也说明若干 ATL 宏。</p><p>ATLFire 特性示例是此示例的特性化版本。</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">安全说明 </th></tr><tr><td><p>提供此代码示例是为了阐释一个概念，它并不代表最安全的编码实践，因此不应在应用程序或网站中使用此代码示例。</p></td></tr></table></div><h1 class="heading">生成并运行示例</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">生成并运行此示例</h4><div class="subSection"><ol><li><p>打开解决方案文件 ATLFire.sln。</p></li><li><p>从<b>“生成”</b>菜单中单击<b>“生成”</b>。</p></li><li><p>示例生成后，在 Web 浏览器中打开 FireTabCtrl.htm，试验此示例所模拟的各种激发类型。</p></li></ol></div><p>可以在 ActiveX 控件测试容器中测试 ATLFire 控件。 有关访问测试容器和用它来测试控件的详细信息，请参见<MSHelp:link keywords="626867CF-FE53-4C30-8973-55BB93EF3917" tabindex="0" >用测试容器测试属性和事件</MSHelp:link>。</p></div><h1 class="heading">类和关键字</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>此示例使用下面的 ATL 类：</p><p>CComObjectRootEx, CComCoClass, CComControl, IDispatchImpl, IProvideClassInfo2Impl, IPersistStreamInitImpl, IPersistStorageImpl, IPersistPropertyBagImpl, IPerPropertyBrowsingImpl, IQuickActivateImpl, IOleControlImpl, IOleObjectImpl, IOleInPlaceActiveObjectImpl, IViewObjectExImpl, IOleInPlaceObjectWindowlessImpl, IDataObjectImpl, ISupportErrorInfo, ISpecifyPropertyPagesImpl, IConnectionPointContainerImpl, IPropertyNotifySinkCP, CDialogImpl</p><p>This sample uses the following keywords:</p><p>_ASSERTE; _itot; _tcstol; ALT_MSG_MAP; Apply; ATLTRACE; BEGIN_COM_MAP; BEGIN_CONNECTION_POINT_MAP; BEGIN_MSG_MAP; BEGIN_OBJECT_MAP; BEGIN_PROPERTY_MAP; CComCoClass; CComModule::GetClassObject; CComModule::GetLockCount; CComModule::Init; CComModule::RegisterServer; CComModule::Term; CComModule::UnregisterServer; CComObjectRootEx; CDialogImpl; ClientToScreen; COM_INTERFACE_ENTRY; COM_INTERFACE_ENTRY_IMPL; COM_INTERFACE_ENTRY_IMPL_IID; COMMAND_HANDLER; COMMAND_ID_HANDLER; CONNECTION_POINT_ENTRY; CPropDlg::DoModal; CreateBitmap; CreatePalette; DECLARE_REGISTRY_RESOURCEID; DeleteDC; DeleteObject; DestroyMenu; DisableThreadLibraryCalls; EnableWindow; END_COM_MAP; END_CONNECTION_POINT_MAP; END_MSG_MAP; END_OBJECT_MAP; END_PROPERTY_MAP; EndDialog; FillRect; FireOnChanged; GetActiveWindow; GetClientRect; GetDlgItem; GetDlgItemText; GetModuleInstance; GetWindowRect; IConnectionPointContainerImpl; IDataObjectImpl; IDispatchImpl; InitFire; InlineIsEqualGUID; IOleControlImpl; IOleInPlaceActiveObjectImpl; IOleInPlaceObjectWindowlessImpl; IOleObjectImpl; IPersistPropertyBagImpl; IPersistStorageImpl; IPersistStreamInitImpl; IPropertyNotifySinkCP; IProvideClassInfo2Impl; IQuickActivateImpl; ISpecifyPropertyPagesImpl; ISupportErrorInfo; IViewObjectExImpl; memcpy; MESSAGE_HANDLER; MessageBox; NOTIFY_CODE_HANDLER; OBJECT_ENTRY; OnActivate; OnApply; OnCancel; OnCreate; OnDestroy; OnEraseBackground; OnInitDialog; OnOK; OnPaint; OnPaletteChanged; OnProperties; OnPropertyChanged; OnQueryNewPalette; OnRButtonDown; OnSelChanged; OnSelChanging; OnSize; OnTimer; PAINTSTRUCT ; PeekMessage; PROP_ENTRY; RealizePalette; SelectObject; SendMessage; SetTimer; SetWindowPos; TrackPopupMenuEx; UnregisterClass</p></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation。 保留所有权利。  请将有关此主题的<a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :ATLFire Sample: Demonstrates Building a Windowed Control">评论</a>发送给 Microsoft。
      </div></div></body></html>


<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>MFCATL Sample: Uses ATL COM Objects in an MFC Server</title></head><body><h1>MFCATL Sample: Uses ATL COM Objects in an MFC Server</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The MFCATL sample illustrates how ATL COM objects can be used in an MFC server EXE.</p><p>The server allows the creation of two objects: <b>ObjectOne</b> (implemented in MFC and supporting a <b>dispinterface</b>) and <b>ObjectTwo</b> (implemented in ATL and supporting a dual interface).</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run the sample</h4><div class="subSection"><ol><li><p>Open the solution file mfcatl.sln.</p></li><li><p>From the <b>Build</b> menu, click <b>Build Solution</b>.</p></li><li><p>From the <b>Debug</b> menu, click <b>Start Without Debugging</b>. This will run the mfcatl.exe server standalone and will register it.</p></li><li><p>Open mfcatl.htm file in your Web browser and click the buttons to call into appropriate objects. You can call each object individually or both at the same time.</p></li></ol></div></div><h1 class="heading">Conversion Remarks</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>Originally, both MFCATL objects were implemented in MFC. Both were derived from <b>CCmdTarget</b>. <b>ObjectTwo</b> was reimplemented using ATL by following these steps:  </p><ol><li><p>Include the ATL header files (Atlbase.h and Atlcom.h) in Premfcat.h.</p></li><li><p>Include Atlimpl.cpp in Premfcat.cpp.</p></li><li><p>Add a <MSHelp:link keywords="F5FACE2C-8FD8-40E6-9EC3-54AB74701769" tabindex="0" >CComModule</MSHelp:link>-derived class to Prefcat.h (similar to the BEEPER EXE sample). The derived class implements the <b>Lock</b> and <b>Unlock</b> methods to forward lock counts to MFC by calling <b>AfxOleLockApp</b> and <b>AfxOleUnlockApp</b>.</p></li><li><p>Add an object map macro pair (<b>BEGIN_OBJECT_MAP</b>/<b>END_OBJECT_MAP</b>) in Mfcatl.cpp and add a static instance of the module class called <b>_Module</b>.</p></li><li><p>Call <b>_Module.Init</b> and <b>Term</b> from <b>InitInstance</b> and <b>ExitInstance</b>.</p></li><li><p>Add the typelib as a resource.</p></li><li><p>Call <b>_Module.RegisterServer(TRUE)</b> from <b>InitInstance</b> to match the MFC call to <b>COleObjectFactory::UpdateRegistryAll</b>.</p></li><li><p>Call <b>_Module.RegisterClassObjects(CLSCTX_LOCAL_SERVER</b>, <b>REGCLS_MULTIPLEUSE)</b> to match the <b>REGCLS_MULTIPLEUSE</b> of MFC's class factories, as implicitly done by the <b>IMPLEMENT_OLECREATE</b> macro.</p></li><li><p>Reimplement <b>ObjectTwo</b> in ATL by following these steps: </p><ul><li><p>Change the ODL file from <b>dispinterface</b> to dual interface.</p></li><li><p>Have the ODL compilation generate a header file (Interf.h) needed by ATL.</p></li><li><p>Rewrite .h and .cpp files (the quickest way is to run the ATL wizards and copy, paste, and rename the automatically generated code in place of the original MFC code).</p></li><li><p>Add an <b>OBJECT_ENTRY(CLSID_ObjectTwo, CObjectTwo)</b> to the ATL object map.</p></li></ul></li></ol><p>Additional conversion steps (not covered here) might include:  </p><ul><li><p>Porting the ODL file to IDL format.</p></li><li><p>Adding support for <b>-RegServer</b> and <b>-UnregServer</b> command-line arguments.</p></li></ul></div><h1 class="heading">Keywords</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>This sample uses the following keywords:</p><p>AfxMessageBox; AfxOleInit; AfxOleLockApp; AfxOleUnlockApp; ASSERT; BEGIN_COM_MAP; CCmdTarget; CCmdTarget::OnFinalRelease; CComCoClass; CComModule; CComModule::GetLockCount; CComModule::Lock; CComModule::Unlock; CComObjectRoot; CDialog; CMenu::AppendMenu; COleObjectFactory::RegisterAll; COleObjectFactory::UpdateRegistryAll; COM_INTERFACE_ENTRY; CString::IsEmpty; CString::LoadString; CWindow::GetSystemMenu; DECLARE_DYNCREATE; DECLARE_NOT_AGGREGATABLE; DECLARE_REGISTRY; DestroyWindow; EnableAutomation; GetClientRect; GetSystemMetrics; IDispatchImpl; PostMessage; SendMessage; SetIcon; ShowWindow; SysAllocString</p></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :MFCATL Sample: Uses ATL COM Objects in an MFC Server">comments</a> about this topic to Microsoft.
      </div></div></body></html>

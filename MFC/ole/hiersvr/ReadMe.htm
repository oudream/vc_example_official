<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>HIERSVR Sample: Demonstrates a Server Application with OLE Drag and Drop</title></head><body><h1>HIERSVR Sample: Demonstrates a Server Application with OLE Drag and Drop</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The HIERSVR sample is an example of a Visual Editing server application that supports linked objects as well as in-place edited objects. In addition, as a "full" server, this application also can directly open and save files. The HIERSVR object is a multiple-level hierarchy diagram, where each node in the hierarchy consists of text surrounded by a rectangle or other shapes. In addition to illustrating server functionality, HIERSVR also illustrates OLE drag and drop, and copying to the Clipboard.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run the HIERSVR sample</h4><div class="subSection"><ol><li><p>Open the solution hiersvr.sln.</p></li><li><p>On the <b>Build</b> menu, click <b>Build</b>.</p></li><li><p>Run HIERSRV as a stand-alone application so it can register itself with the system. </p></li></ol></div></div><h1 class="heading">HIERSRV Diagrams</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>The type of document or object HIERSVR edits and displays is a single inheritance hierarchy diagram. Each node in the diagram, except the root node, has only one parent node. Each parent can have multiple children. A company's organization chart is an example of a hierarchy diagram. So is the list of the MFC classes, because they do not use C++ multiple inheritance. Mfcclass.hie is included as an example HIERSVR document.</p><p>Every node in the hierarchy has a minimal set of attributes.  </p><ul><li><p>Description — Text consisting of up to 30 characters.</p></li><li><p>Shape — Style of rectangle that surrounds the text rectangle, rounded rectangle, or oval rectangle.</p></li><li><p>Item Key Link (optional) — Name used to refer to a linked item. If not specified, the item key link defaults to the description string. This name is visible when you view the link using the Edit Links command in the client application.</p></li></ul></div><h1 class="heading">Creating a HIERSVR Diagram</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>A new HIERSVR diagram begins as a single node with the text "Root node." To add a node, first select its parent node by clicking it. Then click <b>Add Node</b> on the <b>Edit</b> menu. In the <b>Add Node</b> dialog box, specify the three attributes described above. To change the attributes of a node, select it with a mouse click, and then click <b>Change Node</b>. To move a node, click it and drag to the new location.</p><p>HIERSVR will import hierarchy information from a text file formatted as follows: The text in each line (delimited by a line feed) is the node's Description. The number of tab characters preceding the text determines the level of the node in the hierarchy. In the HIERSVR sample directory, Mfcclass.txt is the text import file for Mfcclass.hie, the native HIERSVR file.</p><p>To link a hierarchy diagram to a client document, you must first save the file in HIERSVR. Then select the node you want to copy using <b>Edit Copy</b>. This will copy the link to the Clipboard. The text of the selected node will also be copied to the Clipboard in the <b>CF_TEXT</b> format, and the entire hierarchy of nodes will be copied in a HIERSVR-native clipboard format. Saving the document is required because the link format requires a document name. Finally, in the client application, click <b>Edit Paste Link</b> (or click <b>Paste Link</b> on the <b>Edit Paste Special</b> menu). The link will be displayed in the client document as the node that you selected before clicking <b>Edit Copy</b>. The rectangle will also be displayed.</p><p>To embed a hierarchy diagram in a client document, you can either use a clipboard procedure similar to that above for linking the object, or click <b>Insert New Object</b> in the client application. If you choose the clipboard procedure, use <b>Edit Paste</b> rather than <b>Edit Paste Link</b> in the client application. Only the subhierarchy starting at the selected node will be embedded in the client document.</p><p>Whether you link or embed the diagram, only the top selected node will be displayed in the client application window. To see the rest of the diagram, you will need to launch HIERSVR from the client application by double-clicking the item.</p></div><h1 class="heading">Visual Editing Server</h1><div id="sectionSection3" class="seeAlsoNoToggleSection"><p>HIERSVR illustrates the class derivations necessary to implement a fully functional Visual Editing server application and illustrates some of the most common client application user interfaces that require additional code.</p><p>The three framework classes used to implement a Visual Editing server application are illustrated by the following.  </p><ul><li><p>A <b>COleTemplateServer</b> object, stored as member variable <i>m_server</i> in HIERSVR's application class.</p></li><li><p>The HIERSVR <b>CServerDoc</b> class, derived from <b>COleServerDoc</b>.</p></li><li><p>The HIERSVR <b>CServerItem</b> class, derived from <b>COleServerItem</b>.</p></li><li><p>The HIERSVR <b>CInPlaceFrame</b> class, derived from <b>COleIPFrameWnd</b>, originally created by the application wizard.</p></li></ul></div><h1 class="heading">Keywords</h1><div id="sectionSection4" class="seeAlsoNoToggleSection"><p>This sample demonstrates the following keywords:</p><p>AfxGetMainWnd; AfxMessageBox; AfxOleInit; AfxThrowMemoryException; AfxThrowNotSupportedException; AfxThrowResourceException; CArchive::Close; CCmdTarget::BeginWaitCursor; CCmdTarget::EndWaitCursor; CCmdUI::Enable; CCmdUI::SetCheck; CControlBar::EnableDocking; CControlBar::GetBarStyle; CControlBar::SetBarStyle; CDC::GetDeviceCaps; CDC::LPtoDP; CDC::LPtoHIMETRIC; CDC::SelectObject; CDC::SetMapMode; CDC::SetViewportExt; CDC::SetWindowExt; CDialog::DoModal; CDialog::OnInitDialog; CDocTemplate::SetServerInfo; CDocument::DeleteContents; CDocument::GetFirstViewPosition; CDocument::GetNextView; CDocument::OnNewDocument; CDocument::SetModifiedFlag; CDocument::UpdateAllViews; CFile::Open; CFileDialog::DoModal; CFileDialog::GetPathName; CFontDialog::DoModal; CFontDialog::GetColor; CFrameWnd::Create; CFrameWnd::DockControlBar; CFrameWnd::EnableDocking; CFrameWnd::LoadFrame; CMenu::GetSubMenu; CMenu::LoadMenu; CMenu::TrackPopupMenu; CObList::AddHead; CObList::AddTail; CObList::GetCount; CObList::GetHeadPosition; CObList::GetNext; CObList::GetTail; CObList::RemoveAll; CObList::RemoveAt; CObject::AssertValid; CObject::Dump; CObject::Serialize; COleDataObject::AttachClipboard; COleDataObject::GetFileData; COleDataObject::IsDataAvailable; COleIPFrameWnd::OnCreateControlBars; COleLinkingDoc::OnGetLinkedItem; COleServerDoc::GetItemPosition; COleServerDoc::IsInPlaceActive; COleServerDoc::OnDeactivateUI; COleServerDoc::OnGetEmbeddedItem; COleServerDoc::OnSetItemRects; COleServerDoc::RequestPositionChange; COleServerDoc::UpdateAllItems; COleServerItem::CopyToClipboard; COleServerItem::DoDragDrop; COleServerItem::GetClipboardData; COleServerItem::GetDataSource; COleServerItem::GetDocument; COleServerItem::GetItemName; COleServerItem::IsLinkedItem; COleServerItem::OnDraw; COleServerItem::OnGetClipboardData; COleServerItem::OnGetExtent; COleServerItem::OnOpen; COleServerItem::OnRenderFileData; COleServerItem::SetItemName; COleTemplateServer::ConnectTemplate; COleTemplateServer::UpdateRegistry; CPen::CreatePen; CRect::BottomRight; CRect::Height; CRect::InflateRect; CRect::IntersectRect; CRect::OffsetRect; CRect::PtInRect; CRect::Size; CRect::TopLeft; CScrollView::GetDeviceScrollPosition; CScrollView::ScrollToPosition; CScrollView::SetScrollSizes; CString::Empty; CString::GetLength; CString::IsEmpty; CToolBar::Create; CToolBar::LoadBitmap; CToolBar::SetButtons; CView::GetDocument; CView::OnDragEnter; CView::OnDragLeave; CView::OnDragOver; CView::OnDraw; CView::OnDrop; CView::OnInitialUpdate; CView::OnPrepareDC; CView::OnUpdate; CWinApp::AddDocTemplate; CWinApp::EnableShellOpen; CWinApp::ExitInstance; CWinApp::InitInstance; CWinApp::LoadStdProfileSettings; CWinApp::RegisterShellFileTypes; CWnd::ClientToScreen; CWnd::DoDataExchange; CWnd::GetClientRect; CWnd::GetParentFrame; CWnd::Invalidate; CWnd::InvalidateRect; CWnd::OnCreate; CWnd::OnKeyDown; CWnd::OnLButtonDblClk; CWnd::OnLButtonDown; CWnd::OnRButtonDown; CWnd::OnSize; CWnd::SetOwner; CWnd::ShowWindow; CWnd::UpdateWindow; CreateFontIndirect; DragAcceptFiles; EnableWindow; ExtTextOut; GetDeviceCaps; GetSysColor; GetTextExtent; GetWindowTextLength; IsChild; LPtoDP; LineTo; LoadBitmap; MoveTo; MulDiv; RGB; RectVisible; Rectangle; RegisterClipboardFormat; RoundRect; SelectObject; SetTextColor; SetViewportExt; SetWindowExt; SetWindowOrg; _alloca; afxMemDF; lstrcpy; memset; min; strlen; wcstombs</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>Some samples, such as this one, have not been modified to reflect the changes in the Visual C++ wizards, libraries, and compiler, but still demonstrate how to complete your desired task. </p></td></tr></table></div></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :HIERSVR Sample: Demonstrates a Server Application with OLE Drag and Drop">comments</a> about this topic to Microsoft.
      </div></div></body></html>

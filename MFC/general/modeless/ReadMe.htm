<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>MODELESS Sample: Uses a CDialog Object as a Modeless Dialog Box</title></head><body><h1>MODELESS Sample: Uses a CDialog Object as a Modeless Dialog Box</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The MODELESS sample demonstrates the use of an MFC <b>CDialog</b> object as a modeless dialog box. MODELESS is a simple dialog-based application that manages a list box in its main dialog box while providing a modeless dialog box that allows you to add strings to the list box in the main window.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run the MODELESS sample</h4><div class="subSection"><ol><li><p>Open the solution modeless.sln. </p></li><li><p>On the <b>Build</b> menu, click <b>Build</b>. </p></li><li><p>On the <b>Debug</b> menu, click <b>Start Without Debugging</b>. </p></li></ol></div><p>When the sample starts, it presents an empty list box. You can open the modeless dialog box by clicking <b>Add</b>. Even while the <b>Modeless Adder</b> dialog box is open, you can bring focus back to the main dialog box. The <b>Add</b> button on the main dialog box is unavailable when the modeless dialog box is open so that the user cannot create more than one instance of the modeless box.</p><p>The main dialog box's <b>CMainDlg</b> class manages a pointer to the modeless dialog box. It does this just for convenience; once created, the modeless dialog box requires no further management. In your application, you might choose to offer the modeless box information — that pointer would provide access to the C++ object managing the dialog box and therefore would be a great place to start.</p><p>The code for the <b>Add</b> button in the main dialog box creates the modeless dialog box using the <b>Create</b> function, instead of calling <b>DoModal</b>. This is what makes the box modeless; Windows treats messages for the box differently. When the box is destroyed, <b>EndDialog</b> is not used; instead, <b>DestroyWindow</b> is called. Because the normal <b>OnOk</b> and <b>OnCancel</b> member functions of a <b>CDialog</b> object would call <b>EndDialog</b>, make sure your modeless dialog box does not call those functions and instead overrides them to call <b>DestroyWindow</b>.</p><p>Usually, when you create a modal dialog box, you destroy it manually after <b>DoModal</b> returns. Because you cannot wait for <b>Create</b> to return while displaying your modeless dialog box, you need to have some other mechanism for destroying the C++ object associated with the window. This sample uses a very simple mechanism: It performs <code>delete this </code>in <b>PostNcDestroy</b> — a function that is called after the nonclient area of the box has been destroyed.</p><p>Note that the modeless dialog box communicates with its parent dialog in two different ways. First, when the user presses <b>OK</b>, the string in the edit control in the modeless dialog box is added to the content of the list box in the modal dialog box. Second, when the user destroys the window by whatever means, the modeless box calls the <b>BoxDone</b> function in the modal window. This function simply resets the pointer to the modal dialog box and re-enables the Add button.</p></div><h1 class="heading">Keywords</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>This sample demonstrates the following keywords:</p><p>AfxGetApp; CDC::DrawIcon; CDC::GetSafeHdc; CDialog::Create; CDialog::DoModal; CDialog::OnCancel; CDialog::OnOK; CListBox::AddString; CMenu::AppendMenu; CMenu::ModifyMenu; CRect::Height; CRect::Width; CString::IsEmpty; CString::LoadString; CWinApp::InitInstance; CWinApp::LoadStdProfileSettings; CWnd::DestroyWindow; CWnd::DoDataExchange; CWnd::EnableWindow; CWnd::GetClientRect; CWnd::GetDlgItem; CWnd::GetWindowText; CWnd::IsIconic; CWnd::OnPaint; CWnd::OnQueryDragIcon; CWnd::OnSysCommand; CWnd::PostNcDestroy; CWnd::SendMessage; CWnd::SetActiveWindow; GetSystemMenu; GetSystemMetrics; LoadIcon</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>Some samples, such as this one, have not been modified to reflect the changes in the Visual C++ wizards, libraries, and compiler, but still demonstrate how to complete your desired task. </p></td></tr></table></div></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :MODELESS Sample: Uses a CDialog Object as a Modeless Dialog Box">comments</a> about this topic to Microsoft.
      </div></div></body></html>

<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>CIRCCOLL Attributes Sample: Demonstrates a Collection/Enumeration</title></head><body><h1>CIRCCOLL Attributes Sample: Demonstrates a Collection/Enumeration</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The CIRCCOLL attributes sample shows how to implement a collection/enumeration of objects using ATL. </p><p>The CIRCCOLL sample is the nonattributed version of this sample.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run this sample</h4><div class="subSection"><ol><li><p>Open the solution file circoll.sln.</p></li><li><p>From the <b>Build</b> menu, click <b>Build Solution</b>.</p></li><li><p>In Solution Explorer, right-click the CircCollClient project and select <b>Set as StartUp Project</b>.</p></li><li><p>From the <b>Debug</b> menu, click <b>Start</b>.</p></li><li><p>The Visual Basic form, <b>Form1</b>, will open. Click the button to activate the application.</p></li></ol></div></div><h1 class="heading">How the Sample Works</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>Three object classes are implemented: the collection creator, the collection, and the object inside the collection. Only the collection creator has a <b>coclass</b> associated with it (see Circcoll.idl for the <b>coclass</b> declaration). The collection creator has a method to return a collection of circle objects. The collection object implements the <b>Item</b>, <b>Count</b>, and <b>_NewItem</b> methods, so that the object can be manipulated from Visual Basic using both the <b>For...Next</b> and <b>For Each...</b> syntax.</p></div><h1 class="heading">Attributes</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>This sample uses the following attributes:</p><p>aggregatable, coclass, dual, emitidl, helpstring, id, in, module, noncreatable, object, out, pointer_default, progid, propget, propput, restricted, retval, support_error_info, threading, uuid, version</p></div><h1 class="heading">Keywords</h1><div id="sectionSection3" class="seeAlsoNoToggleSection"><p>This sample uses the following keywords:</p><p>AddRef; ATLASSERT; ATLTRACE; BEGIN_COM_MAP; BEGIN_OBJECT_MAP; CComCoClass; CComObject::CreateInstance; CComObjectRoot; CComVariant; COM_INTERFACE_ENTRY; DECLARE_NOT_AGGREGATABLE; DECLARE_REGISTRY; END_COM_MAP; END_OBJECT_MAP; glBegin; glEnd; glNormal3d; glPolygonMode; glVertex2d; glVertex3d; IConnectionPointContainerImpl::FindConnectionPoint; IConnectionPointImpl::Advise; IDispatchImpl; ISupportErrorInfo; OBJECT_ENTRY; QueryInterface; Release; USES_CONVERSION; VariantCopy; VariantInit</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>Some of the samples, such as this one, have not been modified to reflect the changes in the Visual C++ wizards, libraries, and compiler, but still demonstrate how to complete your desired task. </p></td></tr></table></div></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :CIRCCOLL Attributes Sample: Demonstrates a Collection/Enumeration">comments</a> about this topic to Microsoft.
      </div></div></body></html>

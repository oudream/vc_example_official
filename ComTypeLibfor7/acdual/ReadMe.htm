<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>ACDUAL Sample: Adds Dual Interfaces to an Automation Application (C++ Samples)</title></head><body><h1>ACDUAL Sample: Adds Dual Interfaces to an Automation Application (C++ Samples)</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>ACDUAL demonstrates how to add dual-interface support to an MFC-based Automation application with the native compiler COM support. See the <MSHelp:link keywords="9C199AD7-670A-4813-AC22-52AEF54E51EC" tabindex="0" >MFC ACDUAL sample</MSHelp:link> for more information.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>If you are running Visual C++ Express Edition, you might need to install the Platform SDK before running this sample. For information on how to do this, see <MSHelp:link keywords="971463b4-7178-42cc-87b4-566295b7ae50" tabindex="0" >How to: Use Visual C++ Express Edition with the Microsoft Platform SDK</MSHelp:link>.</p></td></tr></table></div><h4 class="subHeading">To build and run this sample</h4><div class="subSection"><ol><li><p>Open the solution acdual.sln.</p></li><li><p>On the <b>Build</b> menu, click <b>Build Solution</b>.</p></li><li><p>Set acdual as the startup project (right-click the project node and click <b>Set as StartUp Project</b>) and click the <b>Start</b> button. Acdual will register itself (otherwise the client project couldn't run). Close the acdual application before continuing.</p></li><li><p>Set autodriv as the startup project and run it. Use the <b>AutoClik Test Drive</b> dialog box to modify the output in the <b>ACDual AClick</b> window.</p></li></ol></div></div><h1 class="heading">Comparison with the MFC Version</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>The differences between this sample and the MFC sample with the same name are:  </p><ul><li><p>The <b>COleDispatchDriver</b> class is no longer necessary. Instead, <b>#import</b> is used to import a type library.</p></li><li><p>The <b>_bstr_t</b> and <b>_variant_t</b> wrapper classes are used to simplify operations of <b>BSTR</b> and <b>VARIANT</b> types.</p></li><li><p><b>__declspec(property)</b> is used to simplify assignment operations for properties of COM objects.</p></li><li><p>COM error handling is now performed by using the <b>_com_error</b> class.</p></li></ul><p>With the Visual C++ native compiler COM support, the resulting sample code is shorter and more efficient. The MFC-based ACDUAL sample uses both dual interfaces and dispinterfaces only. Compare this sample with the MFC version to see the differences in source code.</p></div><h1 class="heading">Keywords</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>This sample demonstrates the following keywords:</p><p>dispinterface; #import; _com_ptr_t; _variant_t; _bstr_t; _com_error</p></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :ACDUAL Sample: Adds Dual Interfaces to an Automation Application (C++ Samples)">comments</a> about this topic to Microsoft.
      </div></div></body></html>

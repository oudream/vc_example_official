<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>QStat Sample: Wraps a COM Object to Expose Business Logic</title></head><body><h1>QStat Sample: Wraps a COM Object to Expose Business Logic</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The QStat sample shows how to create a DLL that wraps access to a COM object and exposes its functionality to .NET Framework clients. This is accomplished by using C++/CLI.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build the sample</h4><div class="subSection"><ol><li><p>In the Visual Studio IDE, load the solution file QStat.sln.</p></li><li><p>In Solution Explorer, right-click the <b>QStat</b> solution.</p></li><li><p>On the shortcut menu, click <b>Build Solution</b>.</p></li></ol></div><h4 class="subHeading">To run the sample</h4><div class="subSection"><ol><li><p>In Solution Explorer, right-click the <b>netClient</b> project.</p></li><li><p>On the <b>Debug</b> menu, click <b>Start</b>.</p></li></ol></div><p>Once the clients have started, a series of messages are printed to the console, notifying you of calls into the business logic.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>To get more information on the interaction between components, step through the code by either setting breakpoints or using the <b>Debug</b> menu to step into or over the sample code.</p></td></tr></table></div></div><h1 class="heading">Project Description</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>The focus of the sample is on accessing the business logic from both COM and .NET Framework clients and not on implementation of the business logic itself, so the business logic is relatively uninteresting. In fact, the business logic in this case does simple arithmetic (geometric, harmonic, and quadratic mean calculations), returning the result to the client. </p><p>It is a better programming practice to separate business logic from the scaffolding that exposes that business logic (COM in this case). However, this sample assumes that the business logic has been implemented directly within the COM object that will be consumed and that there is no access to the underlying business logic except by going through this COM object.</p><p>The sample creates a wrapper DLL that consumes the COM object via <b>#import</b> and exposes a .NET Framework class to be consumed by .NET Framework clients. This is done by defining a native C++ class, <code>nativeMeanCalc</code>, which contains a COM smart pointer data member brought in through <b>#import</b>. A .NET Framework class is defined that contains a pointer to the native C++ class. The .NET Framework class, <code>netMeanCalc</code>, contains a pointer to a <code>nativeMeanCalc</code> object, which completes the pathway to the destination COM object. <code>netMeanCalc</code> is the public class that the .NET Framework clients will consume.</p><p>There are two client projects:  </p><ul><li><p><code>nativeClient</code> is a COM client and is implemented in native C++. </p></li><li><p><code>netClient</code> is written using C++/CLI.</p></li></ul></div><h1 class="heading">Classes and Keywords</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>This sample demonstrates the following keywords:</p><p>__gc; #using; #import; try; catch; _com_error; Console::WriteLine</p></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :QStat Sample: Wraps a COM Object to Expose Business Logic">comments</a> about this topic to Microsoft.
      </div></div></body></html>

<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>TilePuzzle Sample: Demonstrates Interoperability Between C# and C++/CLI</title></head><body><h1>TilePuzzle Sample: Demonstrates Interoperability Between C# and C++/CLI</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The TilePuzzle sample demonstrates several major Visual C++ features:  </p><ul><li><p>The sample is comprised of components implemented with several new technologies: C++/CLI, C#, and the new COM-related attributes.</p></li><li><p>The sample demonstrates interoperability between managed components (written with C++/CLI and C#) and native components (written with C++ using COM attributes).</p></li></ul><p>The sample implements a basic puzzle game called the Tile Puzzle. The sample loads a bitmap, splits the bitmap into any number of tiles (determined by the user), and randomizes the individual tiles. The user then solves the puzzle by sliding individual tiles around until the original picture is displayed. In addition to these features, the sample has the ability to solve the puzzle using heuristic search algorithms written in C++/CLI and the .NET Framework classes.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run TilePuzzle using Visual Studio</h4><div class="subSection"><ol><li><p>In the Visual Studio IDE, load the solution file PUZZLE.sln.</p></li><li><p>In Solution Explorer, right-click the <b>PUZZLE</b> solution.</p></li><li><p>On the shortcut menu, click <b>Build Solution</b>.</p></li><li><p>On the <b>Debug</b> menu, click <b>Start</b>.</p></li></ol></div><p>After the project builds successfully, try to solve the puzzle yourself.</p></div><h1 class="heading">Architecture of the Sample</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>Here is the basic architecture:</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>The save and load game features are not implemented.</p></td></tr></table></div><p>To access the native COM component from within the managed .NET Framework objects, the sample uses TLBIMP.EXE to generate a .NET Framework proxy dll.</p></div><h1 class="heading">Classes</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><p>The sample demonstrates the following classes:  </p><ul><li><p><MSHelp:link keywords="T:System.Windows.Forms.Form" TABINDEX="0" >System.Windows.Forms.Form</MSHelp:link> – Implements the <code>AboutForm</code> object found in the PUZZLE project.</p></li><li><p><MSHelp:link keywords="T:System.Object" TABINDEX="0" >System.Object</MSHelp:link> – Implements the <code>GameLevelEnum</code> object found in the PUZZLE project.</p></li><li><p><MSHelp:link keywords="T:System.Delegate" TABINDEX="0" >System.Delegate</MSHelp:link> – Implements the <code>SolveThreadProcDlg</code> object found in the PUZZLE project.</p></li></ul></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :TilePuzzle Sample: Demonstrates Interoperability Between C# and C++/CLI">comments</a> about this topic to Microsoft.
      </div></div></body></html>

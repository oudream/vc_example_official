<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>BirthdayPicker Sample: Demonstrates .NET Framework Resources with Windows Forms</title></head><body><h1>BirthdayPicker Sample: Demonstrates .NET Framework Resources with Windows Forms</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The BirthdayPicker sample shows how the .NET Framework resource mechanism can be used in C++ applications. It also demonstrates some common Window Forms components.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><p>To take advantage of .NET Framework resources, C++/CLI applications can use the .NET Framework tool <MSHelp:link keywords="CB8BC835-9221-4888-AF53-1A4F5FAD6C48" tabindex="0" >WinRes.exe</MSHelp:link>. This tool is specialized in creating ".resx" files (the equivalent of ".rc" files in Win32 C++ applications). Birthdaypicker.resx contains the <code>imageList1</code> resource along with the collection of bitmaps it handles. The resultant .resx file is then compiled by resgen.exe into the file birthdaypicker.resources, which is then linked into the resulting assembly of the application.</p><h4 class="subHeading">To build and run BirthdayPicker using Visual Studio</h4><div class="subSection"><ol><li><p>In the Visual Studio IDE, load the solution file BirthdayPicker.sln.</p></li><li><p>In Solution Explorer, right-click the <b>BirthdayPicker</b> solution.</p></li><li><p>On the <b>Debug</b> menu, click <b>Start</b>. </p><p>Observe the Custom build step, running resgen.exe on birthdaypicker.resx and generating the resource file for the application. In addition, note the linker option <b>/assemblyresource</b>, used to link the resulting birthdaypicker.resources to the application. </p></li><li><p>On the <b>Debug</b> menu, click <b>Start</b>.</p></li></ol></div><p>Once the sample is running, two DateTimePicker controls are displayed. Select your birthday using the first control and an arbitrary date (such as today) with the second control. Once the date range has been selected, the linked tree control is propagated with multiple nodes interpreting the timespan in different ways. For example, the number of years or days elapsed, the equivalent in dog years or in fruit fly generations, and how many full moons have passed in this time interval.</p></div><h1 class="heading">Classes and Keywords</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>This sample demonstrates the following classes:</p><p>DateTimePicker; ImageList; ResourceManager; TreeView</p><p>This sample demonstrates the following keywords:</p><p>ResourceManager::GetObject; DateTimePicker::Format; TimeSpan; KeyPressEventHandler; ToolTip::SetToolTip; ContextMenu; TreeView::Nodes; TreeView::SelectedNode; TreeNode::GetNodeCount; TreeNode::Remove; TreeNodeCollection::Insert; TreeNodeCollection::Clear; String::Format; Panel; dynamic_cast</p></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :BirthdayPicker Sample: Demonstrates .NET Framework Resources with Windows Forms">comments</a> about this topic to Microsoft.
      </div></div></body></html>
